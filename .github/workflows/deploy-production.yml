name: sinamon-frontend-deploy-production
on:
  workflow_dispatch:
  push:
    branches:
      - release

jobs:
  Deploy:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout source code.
        uses: actions/checkout@master

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install Dependencies
        run: yarn

#      - name: Run ESLint
#        run: yarn lint

      - name: Build
        env:
          GENERATE_SOURCEMAP: false
          REACT_APP_API_HOST: ${{ secrets.API_HOST }}
          REACT_APP_RECAPTCHA: ${{ secrets.RECAPTCHA }}
        run: yarn build:production

      - name: Deploy                  # S3에 배포하기
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
            --recursive \
            --endpoint-url kr.object.ncloudstorage.com \
            build s3://sinamon-frontend

      - name: Discord Alert Success
        uses: sarisia/actions-status-discord@v1
        if: success()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          description: "🎉 프로덕션 사이트가 배포되었습니다! https://sinamon.info"

      - name: Discord Alert Failure
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          description: "🔥 프로덕션 사이트 배포를 실패하였습니다."
